$DefaultNetstreamDriverCAFile /config/RTORootCA.crt
# JSON format for Log Insight

template(name="rto-log-forwarding" type="string"
  string="<%PRI%>1 %TIMESTAMP:::date-rfc3164% %$.clustername% %$.containertag%: %$!all-json%\n")

template(name="rto-logevent-forwarding" type="string"
  string="<%PRI%>1 %TIMESTAMP:::date-rfc3164% %$.clustername% %$.logeventtag%: %$!kubernetes!host% %$!kubernetes!namespace_name% %$!kubernetes!pod_name% %$!kubernetes!container_name% cmdb:%$!kubernetes!labels!application% %$!@timestamp% %$!message%\n")

template(name="rto-securityevent-forwarding" type="string"
  string="<%PRI%>1 %TIMESTAMP:::date-rfc3164% %$.clustername% %$.securityeventtag%: %$!kubernetes!host% %$!kubernetes!namespace_name% %$!kubernetes!pod_name% %$!kubernetes!container_name% cmdb:%$!kubernetes!labels!application% %$!@timestamp% %$!message%\n")

template(name="timereportedrfc3339" type="string"
  string="%timereported:::date-rfc3339%")

ruleset(name="container_logs") {
  #TODO - set env variable for below 4 lines
  # THESE ARE GLOBALS CURRENTLY MANUALLY SET
  set $.containertag = "clustertag.container";
  set $.logeventtag = "clustertag.logevent";
  set $.securityeventtag = "clustertag.securityevent";
  set $.clustername = "cluster3";
  # THESE COME FROM THE FILENAME

  set $.pod_namespace_container = re_extract($!metadata!filename, "/var/log/containers/(.*).log", 0, 1, "");
  set $.pod = field($.pod_namespace_container, 95, 1);
  set $.namespace = field($.pod_namespace_container, 95, 2);
  set $.container = field($.pod_namespace_container, 95, 3);
  set $!docker!container_id = $.container;
  set $!kubernetes!host = $hostname;
  set $!kubernetes!pod_name = $.pod;
  set $!kubernetes!namespace_name = $.namespace;
  set $!kubernetes!container_name = $.container;
  set $!kubernetes!labels!application = field($.namespace, 45, 1);
  set $!kubernetes!labels!deploymentConfig = field($.pod, 45, 1);
  set $!kubernetes!labels!microservice = field($.pod, 45, 1);
  set $!hostname = $hostname;
  set $.writetime = exec_template("timereportedrfc3339");
  set $.message = $msg;
  set $!message = $.message;
  set $!@timestamp = $.writetime;
  unset $!metadata;

  if ($.namespace == "openshift-apiserver") or ($.namespace == "openshift-etcd") or ($.namespace == "openshift-cluster-version") then {
    stop
  }

  action(type="omfwd" name="loginsight_endpoint" Template="rto-log-forwarding" Target="loginsight" Port="1514" Protocol="tcp" StreamDriverMode="1" StreamDriver="gtls" StreamDriverAuthMode="anon")
  # Log to disk for debugging purposes only
  # action(type="omfile" Template="RSYSLOG_DebugFormat" File="/var/log/rsyslog-debug.log")
  # action(type="omfile" Template="rto-log-forwarding" File="/var/log/rsyslog-debug.log")
  stop
}

# Follow the container log files
input(type="imfile" file="/var/log/containers/*.log"
  tag="kubernetes"
  Severity="info"
  Facility="local0"
  endmsg.regex="^.*std... F "
  ruleset="container_logs")
